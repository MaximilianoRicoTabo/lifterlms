{"version":3,"sources":["llms-admin.js"],"names":["$","window","llms","admin_fields","image","self","this","$uploads","bind","on","open_media_lib","update_image","$btn","frame","title","attr","LLMS","l10n","translate","button_text","wp","media","frames","file_frame","button","text","multiple","attachment","state","get","first","toJSON","id","url","open","src","$input","$preview","prevAll","$remove","hasClass","next","val","removeClass","addClass","length","widgets","$widgets","$info_toggles","init","$widget","closest","action","find","fn","llmsPostsSelect2","options","defaults","placeholder","undefined","post_type","post_statuses","instructor_id","allow_clear","width","each","setting","extend","llmsSelect2","allowClear","ajax","dataType","delay","method","ajaxurl","data","params","page","term","_ajax_nonce","ajax_nonce","processResults","results","map_data","items","Array","isArray","map","item","name","label","children","pagination","more","cache","llmsStudentsSelect2","enrolled_in","not_enrolled_in","roles","email","emailConnectors","registerClient","fields","form","document","createElement","setAttribute","key","value","input","appendChild","body","submit","remoteInstall","callback","parent","remove","post","fail","jqxhr","Spinner","stop","msg","responseJSON","message","responseText","replace","%s","insertAfter","jQuery"],"mappings":"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","file":"../../js/llms-admin.min.js","sourcesContent":["/**\n * LifterLMS Admin Panel Javascript\n *\n * @since Unknown\n<<<<<<< HEAD\n * @version 4.4.0\n=======\n * @version [version]\n>>>>>>> f163ebb80c0688053c8e76ff60b4b333635c0508\n *\n * @param obj $ Traditional jQuery reference.\n * @return void\n */\n( function( $ ) {\n\n\twindow.llms = window.llms || {};\n\n\t/**\n\t * Image upload handler for metabox and settings image fields.\n\t *\n\t * @since [version]\n\t */\n\tvar Uploads = function() {\n\n\t\tvar self = this,\n\t\t\t$uploads = $( '.llms-image-field-upload' );\n\n\t\t/**\n\t\t * Bind click events for field buttons.\n\t\t *\n\t\t * @since [version]\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tthis.bind = function() {\n\n\t\t\t$uploads.on( 'click', function() {\n\t\t\t\tself.open_media_lib( $( this ) );\n\t\t\t} );\n\n\t\t\t$( '.llms-image-field-remove' ).on( 'click', function() {\n\t\t\t\tself.update_image( $( this ), '', '' );\n\t\t\t} );\n\n\t\t}\n\n\t\t/**\n\t\t * Open the media library\n\t\t *\n\t\t * @since [version]\n\t\t *\n\t\t * @param {Object} $btn  The jQuery object for clicked button.\n\t\t * @return {Void}\n\t\t */\n\t\tthis.open_media_lib = function( $btn ) {\n\n\t\t\tvar self  = this,\n\t\t\t\tframe = null;\n\n\t\t\tif ( ! frame ) {\n\t\t\t\tvar title       = $btn.attr( 'data-frame-title' ) || LLMS.l10n.translate( 'Select an Image' ),\n\t\t\t\t\tbutton_text = $btn.attr( 'data-frame-button' ) || LLMS.l10n.translate( 'Select Image' ),\n\t\t\t\t\tframe       = wp.media.frames.file_frame = wp.media( {\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tbutton: {\n\t\t\t\t\t\t\ttext: button_text,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t} );\n\t\t\t}\n\n\t\t\tframe.on( 'select', function() {\n\n\t\t\t\t// We set multiple to false so only get one image from the uploader.\n\t\t\t\tvar attachment = frame.state().get( 'selection' ).first().toJSON();\n\n\t\t\t\tself.update_image( $btn, attachment.id, attachment.url );\n\n\t\t\t});\n\n\t\t\tframe.open();\n\n\t\t};\n\n\t\t/**\n\t\t * Update the DOM with a selected image\n\t\t *\n\t\t * @since [version]\n\t\t *\n\t\t * @param {Object}  $btn The jQuery object of the clicked button.\n\t\t * @param {Integer} id   WP Attachment ID of the image.\n\t\t * @param {String}  src  Image element src of the selected image.\n\t\t * @return {Void}\n\t\t */\n\t\tthis.update_image = function( $btn, id, src ) {\n\n\t\t\tvar $input   = $( '#' + $btn.attr( 'data-id' ) ),\n\t\t\t\t$preview = $btn.prevAll( 'img.llms-image-field-preview' ),\n\t\t\t\t$remove  = $btn.hasClass( 'llms-image-field-remove' ) ? $btn : $btn.next( '.llms-image-field-remove' );\n\n\t\t\t$input.val( id );\n\t\t\t$preview.attr( 'src', src );\n\n\t\t\tif ( '' !== id ) {\n\t\t\t\t$remove.removeClass( 'hidden' );\n\t\t\t} else {\n\t\t\t\t$remove.addClass( 'hidden' );\n\t\t\t}\n\n\t\t}\n\n\t\tif ( $uploads.length ) {\n\t\t\tthis.bind();\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\twindow.llms.admin_fields = {\n\t\timage: new Uploads(),\n\t};\n\n\twindow.llms.widgets = function() {\n\n\t\tthis.$widgets = $( '.llms-widget' );\n\t\tthis.$info_toggles = $( '.llms-widget-info-toggle' );\n\n\t\tthis.init = function() {\n\n\t\t\tthis.bind();\n\n\t\t};\n\n\t\tthis.bind = function() {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.$info_toggles.on( 'hover', function() {\n\n\t\t\t\tvar $toggle = $( this ),\n\t\t\t\t\t$widget = $toggle.closest( '.llms-widget' ),\n\t\t\t\t\t$info = $widget.find( '.llms-widget-info' ),\n\t\t\t\t\taction = ( $widget.hasClass( 'info-showing' ) ) ? 'hide' : 'show';\n\n\t\t\t\tself.$widgets.removeClass( 'info-showing' );\n\n\t\t\t\tif ( 'show' === action ) {\n\n\t\t\t\t\t$widget.addClass( 'info-showing' );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\t// go\n\t\tthis.init();\n\n\t\treturn this;\n\n\t};\n\n\tvar llms_widgets = new window.llms.widgets();\n\n\t/**\n\t * Simple jQuery plugin to transform select elements into Select2-powered elements to query for Courses/Memberships via AJAX.\n\t *\n\t * @since 3.19.4\n\t * @since 3.32.0 Added ability to fetch posts based on their post status.\n\t * @since 3.37.2 Added ability to fetch posts (llms posts) filtered by their instructor id.\n\t * @since 4.4.0 Update ajax nonce source.\n\t *\n\t * @param obj options Options passed to Select2.\n\t *                    Each default option will pulled from the elements data-attributes.\n\t * @return void\n\t */\n\t$.fn.llmsPostsSelect2 = function( options ) {\n\n\t\tvar self = this,\n\t\t\toptions = options || {},\n\t\t\tdefaults = {\n\t\t\t\tmultiple: false,\n\t\t\t\tplaceholder: undefined !== LLMS.l10n ? LLMS.l10n.translate( 'Select a Course/Membership' ) : 'Select a Course/Membership',\n\t\t\t\tpost_type: self.attr( 'data-post-type' ) || 'post',\n\t\t\t\tpost_statuses: self.attr( 'data-post-statuses' ) || 'publish',\n\t\t\t\tinstructor_id: null,\n\t\t\t\tallow_clear: self.attr( 'data-post-type' ) || false,\n\t\t\t\twidth: null,\n\t\t\t};\n\n\t\t$.each( defaults, function( setting ) {\n\t\t\tif ( self.attr( 'data-' + setting ) ) {\n\t\t\t\toptions[ setting ] = self.attr( 'data-' + setting );\n\t\t\t}\n\t\t} );\n\n\t\tif ( 'multiple' === self.attr( 'multiple' ) ) {\n\t\t\toptions.multiple = true;\n\t\t}\n\n\t\toptions = $.extend( defaults, options );\n\n\t\tthis.llmsSelect2( {\n\t\t\tallowClear: options.allow_clear,\n\t\t\tajax: {\n\t\t\t\tdataType: 'JSON',\n\t\t\t\tdelay: 250,\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: window.ajaxurl,\n\t\t\t\tdata: function( params ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\taction: 'select2_query_posts',\n\t\t\t\t\t\tpage: ( params.page ) ? params.page - 1 : 0, // 0 index the pages to make it simpler for the database query\n\t\t\t\t\t\tpost_type: options.post_type,\n\t\t\t\t\t\tinstructor_id : options.instructor_id,\n\t\t\t\t\t\tpost_statuses: options.post_statuses,\n\t\t\t\t\t\tterm: params.term,\n\t\t\t\t\t\t_ajax_nonce: window.llms.ajax_nonce,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tprocessResults: function( data, params ) {\n\n\t\t\t\t\t// recursive function for creating\n\t\t\t\t\tfunction map_data( items ) {\n\n\t\t\t\t\t\t// this is a flat array of results\n\t\t\t\t\t\t// used when only one post type is selected\n\t\t\t\t\t\t// and to format children when using optgroups with multiple post types\n\t\t\t\t\t\tif ( Array.isArray( items ) ) {\n\t\t\t\t\t\t\treturn $.map( items, function( item ) {\n\t\t\t\t\t\t\t\treturn format_item( item );\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t// this sets up the top level optgroups when using multiple post types\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $.map( items, function( item ) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttext: item.label,\n\t\t\t\t\t\t\t\t\tchildren: map_data( item.items ),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// format a single result (option)\n\t\t\t\t\tfunction format_item( item ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: item.name,\n\t\t\t\t\t\t\tid: item.id,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresults: map_data( data.items ),\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\tmore: data.more\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t},\n\t\t\t},\n\t\t\tcache: true,\n\t\t\tplaceholder: options.placeholder,\n\t\t\tmultiple: options.multiple,\n\t\t\twidth: options.width,\n\t\t} );\n\n\t};\n\n\t// automatically setup any select with the `llms-posts-select2` class\n\t$( 'select.llms-posts-select2' ).llmsPostsSelect2();\n\n\t/**\n\t * Simple jQuery plugin to transform select elements into Select2-powered elements to query for Students via AJAX\n\t *\n\t * @since Unknown\n\t * @since 3.17.5 Unknown.\n\t * @since 4.4.0 Update ajax nonce source.\n\t *\n\t * @param obj options Options passed to Select2. Each default option will be pulled from the elements data-attributes.\n\t * @return void\n\t */\n\t$.fn.llmsStudentsSelect2 = function( options ) {\n\n\t\tvar self = this,\n\t\t\toptions = options || {},\n\t\t\tdefaults = {\n\t\t\t\tallow_clear: false,\n\t\t\t\tenrolled_in: '',\n\t\t\t\tmultiple: false,\n\t\t\t\tnot_enrolled_in: '',\n\t\t\t\tplaceholder: undefined !== LLMS.l10n ? LLMS.l10n.translate( 'Select a student' ) : 'Select a student',\n\t\t\t\troles: '',\n\t\t\t\twidth: '100%',\n\t\t\t};\n\n\t\t$.each( defaults, function( setting ) {\n\t\t\tif ( self.attr( 'data-' + setting ) ) {\n\t\t\t\toptions[ setting ] = self.attr( 'data-' + setting );\n\t\t\t}\n\t\t} );\n\n\t\toptions = $.extend( defaults, options );\n\n\t\tthis.llmsSelect2({\n\t\t\tallowClear: options.allow_clear,\n\t\t\tajax: {\n\t\t\t\tdataType: 'JSON',\n\t\t\t\tdelay: 250,\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: window.ajaxurl,\n\t\t\t\tdata: function( params ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_ajax_nonce: window.llms.ajax_nonce,\n\t\t\t\t\t\taction: 'query_students',\n\t\t\t\t\t\tpage: params.page,\n\t\t\t\t\t\tnot_enrolled_in: params.not_enrolled_in || options.not_enrolled_in,\n\t\t\t\t\t\tenrolled_in: params.enrolled_in || options.enrolled_in,\n\t\t\t\t\t\troles: params.roles || options.roles,\n\t\t\t\t\t\tterm: params.term,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tprocessResults: function( data, params ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresults: $.map( data.items, function( item ) {\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: item.name + ' <' + item.email +'>',\n\t\t\t\t\t\t\t\tid: item.id,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tpagination: {\n\t\t\t\t\t\t\tmore: data.more\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t},\n\t\t\t},\n\t\t\tcache: true,\n\t\t\tplaceholder: options.placeholder,\n\t\t\tmultiple: options.multiple,\n\t\t\twidth: options.width,\n\t\t});\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * Scripts for use on the engagements settings tab for email provider connector plugins\n\t *\n\t * @since 3.40.0\n\t */\n\twindow.llms.emailConnectors = {\n\n\t\t/**\n\t\t * Register a client\n\t\t *\n\t\t * Builds and submits a form used to direct the user to the connector's oAuth\n\t\t * authorization endpoint.\n\t\t *\n\t\t * @since 3.40.0\n\t\t *\n\t\t * @param {String} url    Redirect URL.\n\t\t * @param {Object} fields Hash of fields where the key is the field name and the value if the field value.\n\t\t * @return {Void}\n\t\t */\n\t\tregisterClient: function( url, fields ) {\n\n\t\t\tvar form = document.createElement( 'form' );\n\t\t\tform.setAttribute( 'method', 'POST' );\n\t\t\tform.setAttribute( 'action', url );\n\n\t\t\tfunction appendInput( name, value ) {\n\t\t\t\tvar input = document.createElement( 'input' );\n\t\t\t\tinput.setAttribute( 'type', 'hidden' );\n\t\t\t\tinput.setAttribute( 'name', name );\n\t\t\t\tinput.setAttribute( 'value', value );\n\t\t\t\tform.appendChild( input );\n\t\t\t}\n\n\t\t\t$.each( fields, function( key, val ) {\n\t\t\t\tappendInput( key, val );\n\t\t\t} );\n\n\t\t\tdocument.body.appendChild( form );\n\t\t\tform.submit();\n\n\t\t},\n\n\t\t/**\n\t\t * Performs an AJAX request to perform remote installation of the connector plugin\n\t\t *\n\t\t * The callback will more than likely use `registerClient()` on success.\n\t\t *\n\t\t * @since 3.40.0\n\t\t *\n\t\t * @param {Object}   $btn     jQuery object for the connector button.\n\t\t * @param {Object}   data     Hash of data used for the ajax request.\n\t\t * @param {Function} callback Success callback function.\n\t\t * @return {Void}\n\t\t */\n\t\tremoteInstall: function( $btn, data, callback ) {\n\n\t\t\t$btn.parent().find( '.llms-error' ).remove();\n\t\t\t$.post( ajaxurl, data, callback ).fail( function( jqxhr ) {\n\t\t\t\tLLMS.Spinner.stop( $btn );\n\t\t\t\tvar msg = jqxhr.responseJSON && jqxhr.responseJSON.message ? jqxhr.responseJSON.message : jqxhr.responseText;\n\t\t\t\tif ( msg ) {\n\t\t\t\t\t$( '<p class=\"llms-error\">' + LLMS.l10n.replace( 'Error: %s', { '%s': msg } ) + '</p>' ).insertAfter( $btn );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n} )( jQuery );\n"],"sourceRoot":"../../js"}