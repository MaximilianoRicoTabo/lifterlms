name: Test PHPUnit

on:
  workflow_dispatch:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      TESTS_DB_NAME: llms_tests
      TESTS_DB_USER: root
      TESTS_DB_PASS: root

    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      fail-fast: false
      matrix:
        WP:
          - '5.8'
          - '5.7'
          # - '5.6'
          # - '5.6'
          # - '5.6'
          # - '5.5'
          # - '5.4'
        PHP:
          - '8.0'
          - '7.4'
          # - '7.3'
        allow-failure:
          - false

        include:
          - PHP: '8.0'
            WP: 'nightly'
            allow-failure: true

        exclude:
          # These WP Versions don't work on PHP 8.0
          - PHP: '8.0'
            WP: '5.5'
          - PHP: '8.0'
            WP: '5.4'

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.PHP }}

      - name: Start MySQL
        run: sudo systemctl start mysql.service
      - name: Create MySQL database
        run: mysql --user=$TESTS_DB_USER --password=$TESTS_DB_PASS -e "CREATE DATABASE \`$TESTS_DB_NAME\` ;"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install --ignore-platform-reqs

      - name: Install WP Tests
        run: composer run tests-install

      - name: Run Tests
        run: composer run tests

      # - name: Setup Node
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      #     cache: 'npm'

      # - name: Install Node dependencies
      #   run: npm ci
